# Allow Thymeleaf templates to be reloaded at dev time
#spring.thymeleaf.cache=false

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection
#spring.datasource.url=jdbc:mysql://localhost:3306/glass_room
spring.datasource.url=jdbc:mysql://us-cdbr-iron-east-05.cleardb.net/heroku_c37e61c14bfe305?reconnect=true

# Username and secret
#spring.datasource.username=root
#spring.datasource.password=sesame
spring.datasource.username=
spring.datasource.password=

# heroku's ClearDB only allow 10 connections on free
# spring.datasource.tomcat.max-active seems to be the same as spring.datasource.tomcat.maxActive
#
# for full attributes list see: https://tomcat.apache.org/tomcat-8.0-doc/jdbc-pool.html#Common_Attributes
# Maximum number of active connections that can be allocated from this pool at the same time. Default value is 100
spring.datasource.tomcat.max-active=8
# The initial number of connections that are created when the pool is started. Default value is 10
spring.datasource.tomcat.initial-size=3

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1


# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
